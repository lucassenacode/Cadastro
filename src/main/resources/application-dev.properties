#Retirar os comentarios abaixo quando for rodar o perfil no aplication.properties dev e lembrar de criar o bg no pgadmin
# Origem da geração do esquema, que pode ser "metadata" ou "script".
# "metadata" usa as anotações e configurações JPA para gerar o esquema.
#spring.jpa.properties.jakarta.persistence.schema-generation.create-source=metadata

# Ação a ser realizada, que pode ser "create" ou "drop-and-create".
# "create" cria o esquema, enquanto "drop-and-create" primeiro apaga o esquema existente e depois cria um novo.
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create

# Caminho do arquivo onde o script de criação do esquema será gerado.
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=create.sql

# Delimitador de comandos SQL no arquivo de script.
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!exaluno aqui é p nome da base      
#spring.datasource.url=jdbc:postgresql://localhost:5433/exaluno 
#A porta original é 5432 porem foi mapeada no docker-compose.yaml para 5433
#dslist é o nome dado ao banco de dados que devemos criar no pgadmin antes de rodar o perfil dev
spring.datasource.username=postgres
spring.datasource.password=1234567

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=none